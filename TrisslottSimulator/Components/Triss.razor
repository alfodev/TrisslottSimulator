@using System.Globalization
@using TrisslottSimulator;
<div class="container-fluid">
  <div class="row">
    <div class="col-md">
      <h1>Plötsligt händer det</h1>
    <h3 class="text-danger pt-5">Välj önskat antal lotter att skrapa.</h3>

<div class="btn-group-vertical p-5 " role="group">
<button type="button" class="btn btn-lg btn-outline-success" @onclick="(() => Scratch(1))">Skrapa 1</button>
<button type="button" class="btn btn-lg btn-success" @onclick="(() => Scratch(10))">Skrapa 10</button>
<button type="button" class="btn btn-lg btn-primary" @onclick="(() => Scratch(100))">Skrapa 100</button>
<button type="button" class="btn btn-lg btn btn-warning" @onclick="(() => Scratch(1000))">Skrapa 1,000</button>
<button type="button" class="btn btn-lg btn-danger" @onclick="(() => Scratch(10000))">Skrapa 10,000</button>
<button type="button" class="btn btn-lg btn btn-dark" @onclick="(() => Scratch(100000))">Skrapa 100,000</button>
</div>
<div class="pl-5">
    <ul>
        <li>Skrapade lotter: @_scratcher.NumberOfScratches.ToString("N0") st</li>
        <li>Spenderade pengar: @_scratcher.AmountSpent.ToString("N0") SEK</li>
        <li>Total Vinst: @_scratcher.WonAmount.ToString("N0") SEK</li>
        <li>Balans: @_scratcher.Balance.ToString("N0") SEK</li>
        <li>Antal nitlotter: @_scratcher.LostTickets.ToString("N0") st</li>
        <li>Antal vinstlotter: @_scratcher.WonTickets.ToString("N0") st</li>
    </ul>
</div>
    </div>

    <div class="col-md">
             <table class="table table-striped table-sm table-bordered">
        <thead>
            <tr class="table-success">
                <th scope="col">Vinstsumma </th>
                <th scope="col">Antal lotter</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in SortedDict)
            {
            var win = item.Key;
            var amount = item.Value;
                <tr>
                    <th scope="row">@win.ToString("N0")</th>
                    <td>@amount.ToString("N0")</td>
                </tr>
            }
        </tbody>
    </table>
    </div>
  </div>
</div>









@*    <ul id="resultList">
        @foreach (var item in _scratcher.SortedDict)
        {
            var win = item.Key;
            var amount = item.Value;
            <li>Win @win: @amount</li>
        }
    </ul>*@





@code {
    private Scratcher _scratcher = new Scratcher();
    public Dictionary<int, int> SortedDict = new Dictionary<int, int>();
    //Kallar på scratchmetoden i klassen Scratcher och discardar värdet då det inte behövs.
    void Scratch(int count)
    {
        _scratcher.Scratch(count);
        SortedDict = _scratcher.ScratchResults.OrderBy(x => x.Key).ToDictionary(x => x.Key, x => x.Value);
    }

}
